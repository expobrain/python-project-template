name: Unit testing, formatting & linting

on:
  - push

concurrency:
  group: {{"${{"}} github.head_ref || github.run_id {{"}}"}}
  cancel-in-progress: true

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "{{ cookiecutter.python_version }}"
      - name: Cache multiple paths
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pre-commit
          key: {{"${{"}} runner.os {{"}}"}}-{{ cookiecutter.python_version }}-{{"${{"}} hashFiles('**/.pre-commit-config.yaml') {{"}}"}}
      - run: pip install -U pre-commit
      - run: pre-commit run -a

  testing:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.8"
          - "3.9"
          - "3.10"
          - "3.11"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: {{"${{"}} matrix.python-version {{"}}"}}
      - name: Cache multiple Pips
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            .venv
          key: {{"${{"}} runner.os {{"}}"}}-{{"${{"}} matrix.python-version {{"}}"}}-{{"${{"}} hashFiles('**/poetry.lock') {{"}}"}}
      - run: pip install -U poetry
      - run: poetry install
      - run: make test
      - run: make mypy

{% if cookiecutter.is_library == "yes" %}
  bump-version:
    if: github.ref_name == github.event.repository.default_branch && !startsWith(github.event.head_commit.message, 'bump:')
    needs:
      - testing
      - linting
    runs-on: ubuntu-latest
    name: "Bump version and create changelog with commitizen"
    steps:
      - name: Check out
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Setup Python
        id: setup-python
        uses: actions/setup-python@v4.5.0
        with:
          python-version: "{{ cookiecutter.python_version }}"
      - name: Cache multiple paths
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.cache/pre-commit
          key: {{"${{"}} runner.os {{"}}"}}-{{"${{"}} matrix.python-version {{"}}"}}-{{"${{"}} hashFiles('**/poetry.lock') {{"}}"}}
      - name: Install dependencies
        run: |
          pip install -U poetry
          poetry config virtualenvs.in-project true
          poetry install --with dev --no-interaction --no-ansi --sync
      - name: Create new version and changelog
        run: |
          poetry run cz --no-raise 21 bump --yes --changelog --check-consistency
          git config --local user.email "github-actions@githhub.com"
          git config --local user.name "Github Actions"
          git config --local pull.rebase true
          git pull origin $(git branch --show-current)
          git push -u origin HEAD:$(git branch --show-current)
          git push --tags
{% endif %}

  publish_package:
    runs-on: ubuntu-latest
    needs:
    {% if cookiecutter.is_library == "yes" -%}
      - bump-version
    {% else %}
      - testing
      - linting
    {% endif -%}
    if: startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "{{ cookiecutter.python_version }}"
      - name: Cache Pip
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            .venv
          key: {{"${{"}} runner.os {{"}}"}}-{{ cookiecutter.python_version }}-{{"${{"}} hashFiles('**/poetry.lock') {{"}}"}}
      - run: pip install poetry
      - run: poetry build
      # From https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/#publishing-the-distribution-to-pypi-and-testpypi
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: {{"${{"}} secrets.PYPI_API_TOKEN {{"}}"}}
